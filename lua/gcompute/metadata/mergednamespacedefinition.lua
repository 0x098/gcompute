local self = {}GCompute.MergedNamespaceDefinition = GCompute.MakeConstructor (self, GCompute.ObjectDefinition)--- @param name The name of this namespacefunction self:ctor (name)	self.SourceNamespaces = {}		self.Members = {}	self.Metadata = {}end--- Adds a source namespace from which members will be obtained-- @param namespaceDefinition Source namespace definition from which members will be obtainedfunction self:AddSourceNamespace (namespaceDefinition)	self.SourceNamespaces [#self.SourceNamespaces + 1] = namespaceDefinitionend--- Creates a runtime namespace with its metadata stripped out-- @return A runtime namespace without metadatafunction self:CreateRuntimeNamespace ()	local runtimeNamespace = {}	for name, memberDefinition in pairs (self.Members) do		local memberType = self.Metadata [name]:GetMemberType ()		if memberType == GCompute.MemberTypes.Namespace then			runtimeNamespace [name] = memberDefinition:CreateRuntimeNamespace ()		elseif memberType == GCompute.MemberTypes.Method then			runtimeNamespace [name] = memberDefinition		else			ErrorNoHalt ("GCompute.MergedNamespaceDefinition:CreateRuntimeNamespace : Unhandled member type " .. tostring (memberType) .. " (" .. tostring (GCompute.MemberTypes [memberType]) .. ") on " .. tostring (name) .. ".\n")		end	end	return runtimeNamespaceend--- Returns a function which handles runtime namespace initialization-- @return A function which handles runtime namespace initializationfunction self:GetConstructor (name)	return function (executionContext)		local actionChain = GCompute.CallbackChain ()		for _, namespaceDefinition in ipairs (self.SourceNamespaces) do			actionChain:Add (function (callback) namespaceDefinition:GetConstructor () (executionContext) callback () end)		end		actionChain:Execute ()	endend--- Returns the definition object of a member object-- @param name The name of the member object-- @return The definition object for the given member objectfunction self:GetMember (name)	self:ResolveMember (name)	return self.Members [name]end--- Returns the metadata of a member object-- @param name The name of the member object-- @return The MemberInfo object for the given member objectfunction self:GetMemberMetadata (name)	self:ResolveMember (name)	return self.Metadata [name]end--- Returns whether a member with the given name exists-- @param name The name of the member whose existance is being checked-- @return A boolean indicating whether a member with the given name existsfunction self:MemberExists (name)	self:ResolveMember (name)	return self.Metadata [name] and true or falseend--- Looks up a member with the given name in all of the source namespaces and adds it to this MergedNamespaceDefinition's list of members-- @param name The name of the member to be looked upfunction self:ResolveMember (name)	if self.Metadata [name] then return end	local matchNamespaces = {}	local matchObjects = {}	local matchMetadata = {}	for _, namespaceDefinition in pairs (self.SourceNamespaces) do		if namespaceDefinition:MemberExists (name) and			not namespaceDefinition:GetMember (name):IsFileStatic () then			matchNamespaces [#matchNamespaces + 1] = namespaceDefinition			matchObjects [#matchObjects + 1] = namespaceDefinition:GetMember (name)			matchMetadata [#matchMetadata + 1] = namespaceDefinition:GetMemberMetadata (name)		end	end		if #matchObjects == 0 then return end		-- assume that they are all the same type	local memberType = matchMetadata [1]:GetMemberType ()	self.Metadata [name] = matchMetadata [1]	if memberType == GCompute.MemberTypes.Namespace then		self.Members [name] = GCompute.MergedNamespaceDefinition (name)		for _, namespaceDefinition in ipairs (matchObjects) do			self.Members [name]:AddSourceNamespace (namespaceDefinition)		end	elseif memberType == GCompute.MemberTypes.Field then		self.Members [name] = matchObjects [1]	elseif memberType == GCompute.MemberTypes.Method then		self.Members [name] = GCompute.MergedOverloadedFunctionDefinition (name)		for _, overloadedFunctionDefinition in ipairs (matchObjects) do			self.Members [name]:AddSourceOverloadedFunction (overloadedFunctionDefinition)		end	else		ErrorNoHalt ("GCompute.MergedNamespaceDefinition:ResolveMember : Unhandled member type " .. tostring (memberType) .. " (" .. tostring (GCompute.MemberTypes [memberType]) .. ") on " .. tostring (name) .. ".\n")	endend